name: CI/CD for FastAPI on ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{vars.AWS_DEFAULT_REGION}}
  ECR_REPOSITORY: ${{vars.ECR_REPOSITORY}}
  CONTAINER_NAME: ${{vars.ECR_CONTAINER_NAME}}
  ECS_CLUSTER: ${{vars.ECS_CLUSTER}}
  ECS_SERVICE: ${{vars.ECS_BACKEND_SERVICE}}
  
jobs:
  deploy:
    name: Build, Push and Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr_login
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build and Tag Docker Image
        run: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest"
          docker build -t $IMAGE_URI .
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Push Docker Image to ECR
        run: |
          docker push ${{ env.IMAGE_URI }}

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: ${{ env.ECS_CLUSTER }}
          service: ${{ env.ECS_SERVICE }}
          image: ${{ env.IMAGE_URI }}
          container-name: ${{ env.CONTAINER_NAME }}
